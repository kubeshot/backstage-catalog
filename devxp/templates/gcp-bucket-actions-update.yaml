apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: gcp-bucket-actions
  title: GCP Bucket Action Templates[Custom Functions]
  description: Action on a Bucket on GCP with create, update and delete 

  tags:
    - gcp
    - infrastructure
    - bucket
    - resource
spec:
  owner: group:sre-team
  type: resource

  parameters:
    - title: Provide some simple information for action
      required:
        - system
        - lifecycle
        - owner
      properties:
        system:
          title: System
          type: string
          description: System of the component
          ui:field: EntityPicker
          ui:options:
            allowedKinds:
              - System
            defaultKind: System
        owner:
          title: Owner
          type: string
          description: Owner of the component
          ui:field: OwnerPicker
          ui:options:
            allowedKinds:
              - Group
        lifecycle:
          title: Lifecycle
          description: 'Application lifecycle'
          type: string
          default: experimental
          enum:
            - deprecated
            - experimental
            - production
        policy:
          title: Choose the Action
          description: 'Application lifecycle Action'
          type: string
          default: create
          enum:
            - create
            - delete
            - update
  

    - title: Infrastructure
      properties:
        env:
          title: Environment
          description: 'Environment to perform action resources'
          type: string
          default: dev
          enum:
            - dev
            - stg
            - prd
        bucket:
          title: Bucket Parameters
          type: string
          description: Enter the name for Global GCP Bucket.
        dryRun:
          title: Only perform a dry run, don't publish anything
          type: boolean
          default: false


    - title: Infrastructure updation
      properties:
        role:
          title: Role for Bucket Policy Member
          type: string
          description: Enter the role for service account on the bucket.
        serviceaccount:
          title: Service Account for Bucket Policy Member
          type: string
          description: Enter the name for service account.
        dryRun:
          title: Only perform a dry run, don't publish anything
          type: boolean
          default: false          

  steps:
    - id: fetch-template
      name: Fetch GCP Bucket Templates for Delete
      action: fetch:template
      if: ${{ parameters.policy == "delete" }}
      input:
          targetPath: ./gcp-delete
          url: https://github.com/kubeshot/backstage-catalog/tree/main/devxp/skeleton/crossplane/gcp-delete
          values:
            system: ${{ parameters.system }}
            owner: ${{ parameters.owner }}
            env: ${{ parameters.env }}
            bucket: ${{parameters.bucket}}
    - id: fetch-template
      name: Fetch GCP Bucket Templates for Create
      action: fetch:template          
      if: ${{ parameters.policy == "create" }}
      input:
          targetPath: ./gcp
          url: https://github.com/kubeshot/backstage-catalog/tree/main/devxp/skeleton/crossplane/gcp
          values:
            system: ${{ parameters.system }}
            owner: ${{ parameters.owner }}
            env: ${{ parameters.env }}
            bucket: ${{parameters.bucket}}

    - id: fetch-template
      name: Fetch GCP Bucket Templates for Update
      action: fetch:template          
      if: ${{ parameters.policy == "update" }}
      input:
          targetPath: ./gcp-update
          url: https://github.com/kubeshot/backstage-catalog/tree/main/devxp/skeleton/crossplane/gcp-update
          values:
            system: ${{ parameters.system }}
            owner: ${{ parameters.owner }}
            env: ${{ parameters.env }}
            bucket: ${{parameters.bucket}}
            role: ${{parameters.role}}
            serviceaccount: ${{parameters.serviceaccount}}

    - id: open-pr
      name: "Open PR in GitOps Repository for Delete"
      action: publish:github:pull-request
      if: ${{ parameters.policy == "delete" }}
      input:
          repoUrl: github.com?repo=gitops&owner=kubeshot
          branchName: create-${{ parameters.system }}-${{ parameters.env }}-gcp
          title: ':robot: [backstage-bot] Deleted ${{ parameters.system }}-${{ parameters.env }}-${{parameters.bucket}}-gcp'
          description: |
            # New project: ${{ parameters.system }}
            ${{ parameters.description if parameters.description }}
          sourcePath: gcp-delete
          targetPath: apps

    - id: open-pr
      name: "Open PR in GitOps Repository for Create"
      action: publish:github:pull-request
      if: ${{ parameters.policy == "create" }}
      input:
          repoUrl: github.com?repo=gitops&owner=kubeshot
          branchName: create-${{ parameters.system }}-${{ parameters.env }}-gcp
          title: ':robot: [backstage-bot] Create ${{ parameters.system }}-${{ parameters.env }}-${{parameters.bucket}}-gcp'
          description: |
            # New project: ${{ parameters.system }}
            ${{ parameters.description if parameters.description }}
          sourcePath: gcp
          targetPath: apps


    - id: open-pr
      name: "Open PR in GitOps  for Update"
      action: publish:github:pull-request
      if: ${{ parameters.policy == "update" }}
      input:
          repoUrl: github.com?repo=gitops&owner=kubeshot
          branchName: create-${{ parameters.system }}-${{ parameters.env }}-gcp
          title: ':robot: [backstage-bot] Create ${{ parameters.system }}-${{ parameters.env }}-${{parameters.bucket}}-gcp'
          description: |
            # New project: ${{ parameters.system }}
            ${{ parameters.description if parameters.description }}
          sourcePath: gcp-update
          targetPath: apps          

    - name: Results
      if: ${{ parameters.dryRun }}
      action: debug:log
      input:
        listWorkspace: true

  output:
    links:
      - title: Go to GitOps Pull Request
        url: ${{ steps.open-pr.output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}